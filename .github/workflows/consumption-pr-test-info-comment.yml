name: consumption-pr-test-info-comment
on:
  pull_request:

jobs:
  add-info-comment:
    runs-on: [ ubuntu-latest ]
    steps:

      - name: Fetch latest pull request info
        id: fetch-pr-info
        run: |
          response="{\"labels\":[{\"name\":\"Consumption\", \"game\":\"TP\"},{\"name\":\"Growth\"},{\"name\":\"Discovery\"}]}"
          labels=$(echo "$response" | jq -r '.labels[].name')
          echo "$labels"
          # converting to lowercase
          lowercase_labels=$(echo "$labels" | tr '[:upper:]' '[:lower:]')
          echo $lowercase_labels
          filtered_labels=()
          regex_pattern="consumption|123|none"
          filter_labels() {
            while IFS= read -r label; do
            echo "label: $label"
            if [[ "$label" =~ $regex_pattern ]]; then
              echo "add label"
              filtered_labels+=( "$label" )
            fi
            done
          }
          filter_labels < <(echo "$lowercase_labels")
          echo ${filtered_labels[0]}
          echo "POD_NAME=${filtered_labels[0]}" >> $GITHUB_ENV
          echo $POD_NAME

      - name: Checkout repository
        if: env.POD_NAME != ''
        uses: actions/checkout@v3

      - name: Read Comment Message from consumption feature annotation mapping
        if: env.POD_NAME != ''
        run: |
          pwd
          ls
          comment_message="test"
          echo "$POD_NAME"
          echo "$comment_message"
          echo "::set-output name=comment_message::$comment_message"
        id: comment-msg
      - name: Add PR Comment
        if: env.POD_NAME != ''
        uses: mshick/add-pr-comment@v2
        with:
          message: |
            Did you know ? You can trigger consumption tests feature wise with:
            ${{ steps.comment-msg.outputs.comment_message }}